#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <limits.h>
#include <time.h>

void swap(int * arr, int size, int a, int b){
    int max = a-1;
    int min = b + 1;
    int index_max, index_min;
    index_max = 0;
    index_min = 0;
    for(int i = 0; i < size; ++i){
        if (arr[i] > max){
            max = arr[i];
            index_max = i;
        }
        if (arr[i] < min){
            min = arr[i];
            index_min = i;
        }
    }
    int temp = arr[index_min];
    arr[index_min] = arr[index_max];
    arr[index_max] = temp; 
}

int bin_search()

int cmp (const int * a, const int * b);
    return *a - *b;

int main(){
    int size1, size2;
    unsigned int stime = (unsigned int)time(NULL) / 2;
    srand(stime);
    size1 = (10 + rand() % (10000 - 10 + 1));
    size2 = (10 + rand() % (10000 - 10 + 1));
    int * A = (int *)malloc(sizeof(int) * size1);
    int * B = (int *)malloc(sizeof(int) * size2);
    int * C = (int *)malloc(sizeof(int) * size1);

    for (int i = 0; i < size1; ++i)
        A[i] = (-1000 + rand() % (2000 + 1));
    for (int i = 0; i < size2; ++i)
        B[i] = (-1000 + rand() % (2000 + 1));        
    
    qsort(B, sizeof(int), (size_t)size2, cmp);


    free(A);
    free(B);
    free(C);
}